package com.nhsoft.module.report.model;

import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * ItemBar generated by hbm2java
 */
@Entity
public class ItemBar implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8699653580551003603L;
	@EmbeddedId
	private ItemBarId id;
	private String systemBookCode;
	private String itemBarCode;
	private Date itemBarCreateDate;
	private BigDecimal itemBarRate;

	public ItemBar() {
	}

	public ItemBar(ItemBarId id, String systemBookCode, String itemBarCode, Date itemBarCreateDate) {
		this.id = id;
		this.systemBookCode = systemBookCode;
		this.itemBarCode = itemBarCode;
		this.itemBarCreateDate = itemBarCreateDate;
	}

	public BigDecimal getItemBarRate() {
		return itemBarRate;
	}

	public void setItemBarRate(BigDecimal itemBarRate) {
		this.itemBarRate = itemBarRate;
	}

	public ItemBarId getId() {
		return this.id;
	}

	public void setId(ItemBarId id) {
		this.id = id;
	}

	public String getSystemBookCode() {
		return this.systemBookCode;
	}

	public void setSystemBookCode(String systemBookCode) {
		this.systemBookCode = systemBookCode;
	}

	public String getItemBarCode() {
		return this.itemBarCode;
	}

	public void setItemBarCode(String itemBarCode) {
		this.itemBarCode = itemBarCode;
	}

	public Date getItemBarCreateDate() {
		return this.itemBarCreateDate;
	}

	public void setItemBarCreateDate(Date itemBarCreateDate) {
		this.itemBarCreateDate = itemBarCreateDate;
	}
	
	public static void main(String[] args) {
	    List<ItemBar> itemBars = new ArrayList<ItemBar>();
	    ItemBar itemBar = new ItemBar();
	    itemBar.setId(new ItemBarId(1, 1));
	    itemBars.add(itemBar);
	    
	    itemBar = new ItemBar();
	    itemBar.setId(new ItemBarId(1, 2));
	    itemBars.add(itemBar);
	    
	    itemBar = new ItemBar();
	    itemBar.setId(new ItemBarId(2, 1));
	    itemBars.add(itemBar);
	    
	    System.out.println(ItemBar.find(itemBars, 1).size());
    }

	public static List<ItemBar> find(List<ItemBar> itemBars, Integer itemNum) {
		List<ItemBar> list = new ArrayList<ItemBar>();
		boolean find = false;
		for (int i = 0; i < itemBars.size(); i++) {
			ItemBar itemBar = itemBars.get(i);
			if(find && !itemBar.getId().getItemNum().equals(itemNum)){
				break;
			}			
			if (itemBar.getId().getItemNum().equals(itemNum)) {
				list.add(itemBar);
				itemBars.remove(i);
				i--;
				find = true;
			}
		}
		return list;
	}

}
