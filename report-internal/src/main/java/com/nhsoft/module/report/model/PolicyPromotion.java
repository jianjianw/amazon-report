package com.nhsoft.module.report.model;

import com.nhsoft.module.report.query.State;
import com.nhsoft.module.report.util.AppConstants;
import com.nhsoft.module.report.util.AppUtil;
import com.nhsoft.report.utils.DateUtil;
import org.apache.commons.lang3.StringUtils;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import javax.persistence.*;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

/**
 * PolicyPromotion generated by hbm2java
 */
@Entity
public class PolicyPromotion implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2115990502330051470L;
	@Id
	private String policyPromotionNo;
	private String systemBookCode;
	private Date policyPromotionDateFrom;
	private Date policyPromotionDateTo;
	private Date policyPromotionTimeFrom;
	private Date policyPromotionTimeTo;
	private String policyPromotionAppliedBranch;
	private boolean policyPromotionMonActived;
	private boolean policyPromotionTuesActived;
	private boolean policyPromotionWedActived;
	private boolean policyPromotionThursActived;
	private boolean policyPromotionFridayActived;
	private boolean policyPromotionSatActived;
	private boolean policyPromotionSunActived;
	@Embedded
	@AttributeOverrides( {
		 			@AttributeOverride(name="stateCode", column = @Column(name="policyPromotionStateCode")), 
		@AttributeOverride(name="stateName", column = @Column(name="policyPromotionStateName")) } )
	private State state;
	private Date policyPromotionCreateTime;
	private String policyPromotionCreator;
	private Date policyPromotionAuditTime;
	private String policyPromotionAuditor;
	private String policyPromotionMemo;
	private Date policyPromotionCancelTime;
	private String policyPromotionCancelOperator;
	private Integer branchNum;
	private boolean policyPromotionCardOnly;
	private Integer policyPromotionType;
	private boolean policyPromotionAll;
	private BigDecimal policyPromotionDiscount;
	private String policyPromotionCardType;
	private String policyPromotionRepeatType;
	private Date policyPromotionRepeatEnd;
	private String policyPromotionExceptItem;
	private String policyPromotionCategory;
	private String policyPromotionItemCategory;
	private Boolean policyPromotionDisablePayDiscount;
	private Boolean policyPromotionCardOnce;
	@OneToMany
	@Fetch(FetchMode.SUBSELECT)
	@JoinColumn(name = "policyPromotionNo", updatable=false, insertable=false)
	private List<PolicyPromotionDetail> policyPromotionDetails = new ArrayList<PolicyPromotionDetail>(0);

	public PolicyPromotion() {
	}

	public Boolean getPolicyPromotionCardOnce() {
		return policyPromotionCardOnce;
	}

	public void setPolicyPromotionCardOnce(Boolean policyPromotionCardOnce) {
		this.policyPromotionCardOnce = policyPromotionCardOnce;
	}

	public Boolean getPolicyPromotionDisablePayDiscount() {
		return policyPromotionDisablePayDiscount;
	}

	public void setPolicyPromotionDisablePayDiscount(Boolean policyPromotionDisablePayDiscount) {
		this.policyPromotionDisablePayDiscount = policyPromotionDisablePayDiscount;
	}

	public String getPolicyPromotionItemCategory() {
		return policyPromotionItemCategory;
	}

	public void setPolicyPromotionItemCategory(String policyPromotionItemCategory) {
		this.policyPromotionItemCategory = policyPromotionItemCategory;
	}

	public String getPolicyPromotionCategory() {
		return policyPromotionCategory;
	}

	public void setPolicyPromotionCategory(String policyPromotionCategory) {
		this.policyPromotionCategory = policyPromotionCategory;
	}

	public String getPolicyPromotionNo() {
		return this.policyPromotionNo;
	}

	public void setPolicyPromotionNo(String policyPromotionNo) {
		this.policyPromotionNo = policyPromotionNo;
	}

	public Date getPolicyPromotionDateFrom() {
		return this.policyPromotionDateFrom;
	}

	public void setPolicyPromotionDateFrom(Date policyPromotionDateFrom) {
		this.policyPromotionDateFrom = policyPromotionDateFrom;
	}

	public Date getPolicyPromotionDateTo() {
		return this.policyPromotionDateTo;
	}

	public void setPolicyPromotionDateTo(Date policyPromotionDateTo) {
		this.policyPromotionDateTo = policyPromotionDateTo;
	}

	public Date getPolicyPromotionTimeFrom() {
		return this.policyPromotionTimeFrom;
	}

	public void setPolicyPromotionTimeFrom(Date policyPromotionTimeFrom) {
		this.policyPromotionTimeFrom = policyPromotionTimeFrom;
	}

	public Date getPolicyPromotionTimeTo() {
		return this.policyPromotionTimeTo;
	}

	public void setPolicyPromotionTimeTo(Date policyPromotionTimeTo) {
		this.policyPromotionTimeTo = policyPromotionTimeTo;
	}

	public boolean isPolicyPromotionMonActived() {
		return this.policyPromotionMonActived;
	}

	public void setPolicyPromotionMonActived(boolean policyPromotionMonActived) {
		this.policyPromotionMonActived = policyPromotionMonActived;
	}

	public boolean isPolicyPromotionTuesActived() {
		return this.policyPromotionTuesActived;
	}

	public void setPolicyPromotionTuesActived(boolean policyPromotionTuesActived) {
		this.policyPromotionTuesActived = policyPromotionTuesActived;
	}

	public boolean isPolicyPromotionWedActived() {
		return this.policyPromotionWedActived;
	}

	public void setPolicyPromotionWedActived(boolean policyPromotionWedActived) {
		this.policyPromotionWedActived = policyPromotionWedActived;
	}

	public boolean isPolicyPromotionThursActived() {
		return this.policyPromotionThursActived;
	}

	public void setPolicyPromotionThursActived(boolean policyPromotionThursActived) {
		this.policyPromotionThursActived = policyPromotionThursActived;
	}

	public boolean isPolicyPromotionFridayActived() {
		return this.policyPromotionFridayActived;
	}

	public void setPolicyPromotionFridayActived(boolean policyPromotionFridayActived) {
		this.policyPromotionFridayActived = policyPromotionFridayActived;
	}

	public boolean isPolicyPromotionSatActived() {
		return this.policyPromotionSatActived;
	}

	public void setPolicyPromotionSatActived(boolean policyPromotionSatActived) {
		this.policyPromotionSatActived = policyPromotionSatActived;
	}

	public boolean isPolicyPromotionSunActived() {
		return this.policyPromotionSunActived;
	}

	public void setPolicyPromotionSunActived(boolean policyPromotionSunActived) {
		this.policyPromotionSunActived = policyPromotionSunActived;
	}

	public State getState() {
		return state;
	}

	public void setState(State state) {
		this.state = state;
	}

	public Date getPolicyPromotionCreateTime() {
		return this.policyPromotionCreateTime;
	}

	public void setPolicyPromotionCreateTime(Date policyPromotionCreateTime) {
		this.policyPromotionCreateTime = policyPromotionCreateTime;
	}

	public String getPolicyPromotionCreator() {
		return this.policyPromotionCreator;
	}

	public void setPolicyPromotionCreator(String policyPromotionCreator) {
		this.policyPromotionCreator = policyPromotionCreator;
	}

	public Date getPolicyPromotionAuditTime() {
		return this.policyPromotionAuditTime;
	}

	public void setPolicyPromotionAuditTime(Date policyPromotionAuditTime) {
		this.policyPromotionAuditTime = policyPromotionAuditTime;
	}

	public String getPolicyPromotionAuditor() {
		return this.policyPromotionAuditor;
	}

	public void setPolicyPromotionAuditor(String policyPromotionAuditor) {
		this.policyPromotionAuditor = policyPromotionAuditor;
	}

	public String getPolicyPromotionMemo() {
		return this.policyPromotionMemo;
	}

	public void setPolicyPromotionMemo(String policyPromotionMemo) {
		this.policyPromotionMemo = policyPromotionMemo;
	}

	public Date getPolicyPromotionCancelTime() {
		return this.policyPromotionCancelTime;
	}

	public void setPolicyPromotionCancelTime(Date policyPromotionCancelTime) {
		this.policyPromotionCancelTime = policyPromotionCancelTime;
	}

	public String getPolicyPromotionCancelOperator() {
		return this.policyPromotionCancelOperator;
	}

	public void setPolicyPromotionCancelOperator(String policyPromotionCancelOperator) {
		this.policyPromotionCancelOperator = policyPromotionCancelOperator;
	}

	public Integer getBranchNum() {
		return this.branchNum;
	}

	public void setBranchNum(Integer branchNum) {
		this.branchNum = branchNum;
	}

	public boolean isPolicyPromotionCardOnly() {
		return this.policyPromotionCardOnly;
	}

	public void setPolicyPromotionCardOnly(boolean policyPromotionCardOnly) {
		this.policyPromotionCardOnly = policyPromotionCardOnly;
	}

	public Integer getPolicyPromotionType() {
		return this.policyPromotionType;
	}

	public void setPolicyPromotionType(Integer policyPromotionType) {
		this.policyPromotionType = policyPromotionType;
	}

	public boolean isPolicyPromotionAll() {
		return this.policyPromotionAll;
	}

	public void setPolicyPromotionAll(boolean policyPromotionAll) {
		this.policyPromotionAll = policyPromotionAll;
	}

	public BigDecimal getPolicyPromotionDiscount() {
		return this.policyPromotionDiscount;
	}

	public void setPolicyPromotionDiscount(BigDecimal policyPromotionDiscount) {
		this.policyPromotionDiscount = policyPromotionDiscount;
	}

	public String getPolicyPromotionCardType() {
		return this.policyPromotionCardType;
	}

	public void setPolicyPromotionCardType(String policyPromotionCardType) {
		this.policyPromotionCardType = policyPromotionCardType;
	}

	public String getSystemBookCode() {
		return systemBookCode;
	}

	public void setSystemBookCode(String systemBookCode) {
		this.systemBookCode = systemBookCode;
	}

	public String getPolicyPromotionAppliedBranch() {
		return policyPromotionAppliedBranch;
	}

	public void setPolicyPromotionAppliedBranch(String policyPromotionAppliedBranch) {
		this.policyPromotionAppliedBranch = policyPromotionAppliedBranch;
	}

	public List<PolicyPromotionDetail> getPolicyPromotionDetails() {
		return policyPromotionDetails;
	}

	public void setPolicyPromotionDetails(List<PolicyPromotionDetail> policyPromotionDetails) {
		this.policyPromotionDetails = policyPromotionDetails;
	}

	public String getPolicyPromotionRepeatType() {
		return policyPromotionRepeatType;
	}

	public void setPolicyPromotionRepeatType(String policyPromotionRepeatType) {
		this.policyPromotionRepeatType = policyPromotionRepeatType;
	}

	public Date getPolicyPromotionRepeatEnd() {
		return policyPromotionRepeatEnd;
	}

	public void setPolicyPromotionRepeatEnd(Date policyPromotionRepeatEnd) {
		this.policyPromotionRepeatEnd = policyPromotionRepeatEnd;
	}
	
	public String getPolicyPromotionExceptItem() {
		return policyPromotionExceptItem;
	}

	public void setPolicyPromotionExceptItem(String policyPromotionExceptItem) {
		this.policyPromotionExceptItem = policyPromotionExceptItem;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((policyPromotionNo == null) ? 0 : policyPromotionNo.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		PolicyPromotion other = (PolicyPromotion) obj;
		if (policyPromotionNo == null) {
			if (other.policyPromotionNo != null)
				return false;
		} else if (!policyPromotionNo.equals(other.policyPromotionNo))
			return false;
		return true;
	}

	public String createNoticeText(List<PosItem> posItems){
		StringBuffer sb = new StringBuffer();
		sb.append("促销政策—促销特价");
		String type = "";
		if(policyPromotionType != null){
			if(policyPromotionType == AppConstants.POLICY_PROMOTION_SUPPLIER_CODE){
				type = AppConstants.POLICY_PROMOTION_SUPPLIER;
			} else if(policyPromotionType == AppConstants.POLICY_PROMOTION_CENTER_CODE){
				type = AppConstants.POLICY_PROMOTION_CENTER;
			}
		}
		if(StringUtils.isNotEmpty(type)){
			sb.append("(").append(type).append(")");
		}
		sb.append(String.format("  单据号[%s]即将到期", policyPromotionNo)).append(AppUtil.getSeperate());
		sb.append(String.format("促销日期:%s 至 %s 促销时间:%s 至 %s", DateUtil.getDateStr(policyPromotionDateFrom), DateUtil.getDateStr(policyPromotionDateTo)
				, DateUtil.getHHmmStr(policyPromotionTimeFrom), DateUtil.getHHmmStr(policyPromotionTimeTo))).append(AppUtil.getSeperate());
		sb.append(AppUtil.getSeperate());
		String blank = AppUtil.getString(8);
		int maxItemNameLength = 0;
		for(int i = 0;i < policyPromotionDetails.size();i++){
			PolicyPromotionDetail policyPromotionDetail = policyPromotionDetails.get(i);
			Integer itemNum = policyPromotionDetail.getItemNum();
			PosItem posItem = PosItem.get(itemNum, posItems);
			if(posItem == null){
				continue;
			}
			policyPromotionDetail.setPosItem(posItem);
			String itemName = posItem.getItemCode() + "|" + posItem.getItemName();
			int length = AppUtil.getStringWidth(itemName);
			if(length > maxItemNameLength){
				maxItemNameLength = length;
			}
		}
		sb.append("商品").append(AppUtil.getString(maxItemNameLength + 5)).append("原价").append(blank).append("特价").append(blank).append("每单限量");
		sb.append(AppUtil.getSeperate());
		for(int i = 0;i < policyPromotionDetails.size();i++){
			PolicyPromotionDetail policyPromotionDetail = policyPromotionDetails.get(i);
			if(policyPromotionDetail.getPosItem() == null){
				continue;
			}
			String item = policyPromotionDetail.getPosItem().getItemCode() + "|" + policyPromotionDetail.getPosItem().getItemName();
			sb.append(item);
			sb.append(AppUtil.getString(4 + maxItemNameLength + 5 - AppUtil.getStringWidth(item)));
			
			item = policyPromotionDetail.getPolicyPromotionDetailStdPrice().setScale(2, BigDecimal.ROUND_HALF_UP).toString();
			sb.append(item);
			sb.append(AppUtil.getString(4 + 8 - item.length()));
			
			item = policyPromotionDetail.getPolicyPromotionDetailSpecialPrice().setScale(2, BigDecimal.ROUND_HALF_UP).toString();
			sb.append(item);
			sb.append(AppUtil.getString(4 + 8 - item.length()));
			
			item = policyPromotionDetail.getPolicyPromotionDetailBillLimit().setScale(2, BigDecimal.ROUND_HALF_UP).toString();
			sb.append(item);
			sb.append(AppUtil.getSeperate());
		}
		return sb.toString();
	}
	
	public static void main(String[] args) {
		System.out.println(AppUtil.getStringWidth("400003|东江湾东江鱼块猛辣味"));
	}
	
	public boolean checkValidTime(){
		Date now = Calendar.getInstance().getTime();
		int dayOfWeek = DateUtil.getDayOfWeek(now);
		if(DateUtil.getMinOfDate(policyPromotionDateFrom).compareTo(now) > 0){
			return false;
		}
		if(DateUtil.getMaxOfDate(policyPromotionDateTo).compareTo(now) < 0){
			return false;
		}
		if(dayOfWeek == 1 && !policyPromotionSunActived){			
			return false;			
		}
		if(dayOfWeek == 2 && !policyPromotionMonActived){			
			return false;			
		}
		if(dayOfWeek == 3 && !policyPromotionTuesActived){			
			return false;			
		}
		if(dayOfWeek == 4 && !policyPromotionWedActived){			
			return false;			
		}
		if(dayOfWeek == 5 && !policyPromotionThursActived){			
			return false;			
		}
		if(dayOfWeek == 6 && !policyPromotionFridayActived){			
			return false;			
		}
		if(dayOfWeek == 7 && !policyPromotionSatActived){			
			return false;			
		}
		return true;
	}

}
