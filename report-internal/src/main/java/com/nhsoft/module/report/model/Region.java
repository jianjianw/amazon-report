package com.nhsoft.module.report.model;

import javax.persistence.Entity;
import javax.persistence.Id;
import java.util.*;


/**
 * Region generated by hbm2java
 */
@Entity
public class Region implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -1323302784017264541L;
	@Id
	private Integer regionNum;
	private String systemBookCode;
	private String regionName;
	private Integer regionParentNum;

	public Region() {
	}

	public Integer getRegionNum() {
		return this.regionNum;
	}

	public void setRegionNum(Integer regionNum) {
		this.regionNum = regionNum;
	}

	public String getSystemBookCode() {
		return this.systemBookCode;
	}

	public void setSystemBookCode(String systemBookCode) {
		this.systemBookCode = systemBookCode;
	}

	public String getRegionName() {
		return this.regionName;
	}

	public void setRegionName(String regionName) {
		this.regionName = regionName;
	}

	public Integer getRegionParentNum() {
		return this.regionParentNum;
	}

	public void setRegionParentNum(Integer regionParentNum) {
		this.regionParentNum = regionParentNum;
	}
	
	public static List<Integer> findSubRegions(List<Region> regions, Integer regionNum) {
		Set<Integer> set = new HashSet<Integer>();
		Set<Integer> subSet = new HashSet<Integer>();
		Set<Integer> compareSet = new HashSet<Integer>();
		compareSet.add(regionNum);
		while (compareSet.size() != 0) {
			subSet.clear();
			for (int i = 0; i < regions.size(); i++) {
				Region region = regions.get(i);
				if (region.getRegionParentNum() != null && compareSet.contains(region.getRegionParentNum())) {
					subSet.add(region.getRegionNum());
				}
			}
			Iterator<Integer> iterator = subSet.iterator();
			while (iterator.hasNext()) {
				Integer num = iterator.next();
				if (set.contains(num)) {
					subSet.remove(num);
				}
			}
			compareSet = new HashSet<Integer>(subSet);
			set.addAll(subSet);
		}
		return new ArrayList<Integer>(set);
	}

}
