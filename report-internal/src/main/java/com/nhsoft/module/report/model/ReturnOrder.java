package com.nhsoft.module.report.model;


import com.nhsoft.module.origin.export.State;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import javax.persistence.*;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * ReturnOrder generated by hbm2java
 */
@Entity
public class ReturnOrder implements java.io.Serializable {

	private static final long serialVersionUID = -1628363746197861963L;
	@Id
	private String returnOrderFid;
	private String receiveOrderFid;
	@ManyToOne
	@JoinColumn(name="supplierNum")
	private Supplier supplier;
	private String systemBookCode;
	private Integer branchNum;
	private Integer storehouseNum;
	private Date returnOrderDate;
	private String returnOrderOperator;
	private Date returnOrderPaymentDate;
	private String returnOrderMemo;
	@Embedded
	@AttributeOverrides( {
		 			@AttributeOverride(name="stateCode", column = @Column(name="returnOrderStateCode")), 
		@AttributeOverride(name="stateName", column = @Column(name="returnOrderStateName")) } )
	private State state;
	private String returnOrderCreator;
	private String returnOrderAuditor;
	private boolean returnOrderTransferFlag = false;
	private BigDecimal returnOrderTotalMoney;
	private BigDecimal returnOrderDiscountMoney;
	private BigDecimal returnOrderDueMoney;
	private BigDecimal returnOrderPaidMoney;
	private Date returnOrderLastestPaymentDate;
	private String returnOrderUuid;
	private Integer settlementBranchNum;
	private BigDecimal returnOrderPresentMoney;
	private Date returnOrderCreateTime;
	private Date returnOrderAuditTime;
	private Boolean returnOrderReadFlag;
	private Integer returnOrderPrintCount;
	private Boolean returnOrderRepealFlag;
	private String returnOrderBillNo;
	private Boolean returnOrderAntiFlag;
	private String returnOrderAuditBizday;
	@OneToMany
	@Fetch(FetchMode.SUBSELECT)
	@JoinColumn(name = "returnOrderFid", updatable=false, insertable=false)
	private List<ReturnOrderDetail> returnOrderDetails = new ArrayList<ReturnOrderDetail>();

	
	
	@Transient
	private AppUser appUser;
	@Transient
	private String copyFid;
	@Transient
	private Boolean tempAudit;
	@Transient
	private Boolean saveAudit;
	
	public Boolean getSaveAudit() {
		return saveAudit;
	}
	
	public void setSaveAudit(Boolean saveAudit) {
		this.saveAudit = saveAudit;
	}
	
	public Boolean getTempAudit() {
		return tempAudit;
	}

	public void setTempAudit(Boolean tempAudit) {
		this.tempAudit = tempAudit;
	}

	public String getCopyFid() {
		return copyFid;
	}

	public void setCopyFid(String copyFid) {
		this.copyFid = copyFid;
	}
	
    public AppUser getAppUser() {
		return appUser;
	}

	public void setAppUser(AppUser appUser) {
		this.appUser = appUser;
	}
    public String getReturnOrderAuditBizday() {
		return returnOrderAuditBizday;
	}

	public void setReturnOrderAuditBizday(String returnOrderAuditBizday) {
		this.returnOrderAuditBizday = returnOrderAuditBizday;
	}

	public Boolean getReturnOrderAntiFlag() {
		return returnOrderAntiFlag;
	}

	public void setReturnOrderAntiFlag(Boolean returnOrderAntiFlag) {
		this.returnOrderAntiFlag = returnOrderAntiFlag;
	}

	public Integer getReturnOrderPrintCount() {
		return returnOrderPrintCount;
	}

	public void setReturnOrderPrintCount(Integer returnOrderPrintCount) {
		this.returnOrderPrintCount = returnOrderPrintCount;
	}

	public String getReturnOrderFid() {
		return this.returnOrderFid;
	}

	public void setReturnOrderFid(String returnOrderFid) {
		this.returnOrderFid = returnOrderFid;
	}

	public Supplier getSupplier() {
		return supplier;
	}

	public void setSupplier(Supplier supplier) {
		this.supplier = supplier;
	}

	public String getSystemBookCode() {
		return this.systemBookCode;
	}

	public void setSystemBookCode(String systemBookCode) {
		this.systemBookCode = systemBookCode;
	}

	public Integer getBranchNum() {
		return this.branchNum;
	}

	public void setBranchNum(Integer branchNum) {
		this.branchNum = branchNum;
	}

	public Integer getStorehouseNum() {
		return this.storehouseNum;
	}

	public void setStorehouseNum(Integer storehouseNum) {
		this.storehouseNum = storehouseNum;
	}

	public Date getReturnOrderDate() {
		return this.returnOrderDate;
	}

	public void setReturnOrderDate(Date returnOrderDate) {
		this.returnOrderDate = returnOrderDate;
	}

	public String getReturnOrderOperator() {
		return this.returnOrderOperator;
	}

	public void setReturnOrderOperator(String returnOrderOperator) {
		this.returnOrderOperator = returnOrderOperator;
	}

	public Date getReturnOrderPaymentDate() {
		return this.returnOrderPaymentDate;
	}

	public void setReturnOrderPaymentDate(Date returnOrderPaymentDate) {
		this.returnOrderPaymentDate = returnOrderPaymentDate;
	}

	public String getReturnOrderMemo() {
		return this.returnOrderMemo;
	}

	public void setReturnOrderMemo(String returnOrderMemo) {
		this.returnOrderMemo = returnOrderMemo;
	}

	public State getState() {
		return state;
	}

	public void setState(State state) {
		this.state = state;
	}

	public String getReturnOrderCreator() {
		return this.returnOrderCreator;
	}

	public void setReturnOrderCreator(String returnOrderCreator) {
		this.returnOrderCreator = returnOrderCreator;
	}

	public String getReturnOrderAuditor() {
		return this.returnOrderAuditor;
	}

	public void setReturnOrderAuditor(String returnOrderAuditor) {
		this.returnOrderAuditor = returnOrderAuditor;
	}

	public boolean isReturnOrderTransferFlag() {
		return this.returnOrderTransferFlag;
	}

	public void setReturnOrderTransferFlag(boolean returnOrderTransferFlag) {
		this.returnOrderTransferFlag = returnOrderTransferFlag;
	}

	public BigDecimal getReturnOrderTotalMoney() {
		return this.returnOrderTotalMoney;
	}

	public void setReturnOrderTotalMoney(BigDecimal returnOrderTotalMoney) {
		this.returnOrderTotalMoney = returnOrderTotalMoney;
	}

	public BigDecimal getReturnOrderDiscountMoney() {
		return this.returnOrderDiscountMoney;
	}

	public void setReturnOrderDiscountMoney(BigDecimal returnOrderDiscountMoney) {
		if(returnOrderDiscountMoney != null){
			returnOrderDiscountMoney = returnOrderDiscountMoney.setScale(2, BigDecimal.ROUND_HALF_UP);
		}
		this.returnOrderDiscountMoney = returnOrderDiscountMoney;
	}

	public BigDecimal getReturnOrderDueMoney() {
		return this.returnOrderDueMoney;
	}

	public void setReturnOrderDueMoney(BigDecimal returnOrderDueMoney) {
		if(returnOrderDueMoney != null){
			returnOrderDueMoney = returnOrderDueMoney.setScale(2, BigDecimal.ROUND_HALF_UP);
		}
		this.returnOrderDueMoney = returnOrderDueMoney;
	}

	public BigDecimal getReturnOrderPaidMoney() {
		return this.returnOrderPaidMoney;
	}

	public void setReturnOrderPaidMoney(BigDecimal returnOrderPaidMoney) {
		if(returnOrderPaidMoney != null){
			returnOrderPaidMoney = returnOrderPaidMoney.setScale(2, BigDecimal.ROUND_HALF_UP);
		}
		this.returnOrderPaidMoney = returnOrderPaidMoney;
	}

	public Date getReturnOrderLastestPaymentDate() {
		return this.returnOrderLastestPaymentDate;
	}

	public void setReturnOrderLastestPaymentDate(
			Date returnOrderLastestPaymentDate) {
		this.returnOrderLastestPaymentDate = returnOrderLastestPaymentDate;
	}

	public String getReturnOrderUuid() {
		return this.returnOrderUuid;
	}

	public void setReturnOrderUuid(String returnOrderUuid) {
		this.returnOrderUuid = returnOrderUuid;
	}

	public Integer getSettlementBranchNum() {
		return this.settlementBranchNum;
	}

	public void setSettlementBranchNum(Integer settlementBranchNum) {
		this.settlementBranchNum = settlementBranchNum;
	}

	public BigDecimal getReturnOrderPresentMoney() {
		return this.returnOrderPresentMoney;
	}

	public void setReturnOrderPresentMoney(BigDecimal returnOrderPresentMoney) {
		this.returnOrderPresentMoney = returnOrderPresentMoney;
	}

	public Date getReturnOrderCreateTime() {
		return this.returnOrderCreateTime;
	}

	public void setReturnOrderCreateTime(Date returnOrderCreateTime) {
		this.returnOrderCreateTime = returnOrderCreateTime;
	}

	public Date getReturnOrderAuditTime() {
		return this.returnOrderAuditTime;
	}

	public void setReturnOrderAuditTime(Date returnOrderAuditTime) {
		this.returnOrderAuditTime = returnOrderAuditTime;

	}

	public String getReceiveOrderFid() {
		return receiveOrderFid;
	}

	public void setReceiveOrderFid(String receiveOrderFid) {
		this.receiveOrderFid = receiveOrderFid;
	}

	public List<ReturnOrderDetail> getReturnOrderDetails() {
		return returnOrderDetails;
	}

	public void setReturnOrderDetails(List<ReturnOrderDetail> returnOrderDetails) {
		this.returnOrderDetails = returnOrderDetails;
	}

	public Boolean getReturnOrderReadFlag() {
		return returnOrderReadFlag;
	}

	public void setReturnOrderReadFlag(Boolean returnOrderReadFlag) {
		this.returnOrderReadFlag = returnOrderReadFlag;
	}

	public Boolean getReturnOrderRepealFlag() {
		return returnOrderRepealFlag;
	}

	public void setReturnOrderRepealFlag(Boolean returnOrderRepealFlag) {
		this.returnOrderRepealFlag = returnOrderRepealFlag;
	}

	public String getReturnOrderBillNo() {
		return returnOrderBillNo;
	}

	public void setReturnOrderBillNo(String returnOrderBillNo) {
		this.returnOrderBillNo = returnOrderBillNo;
	}

	public void removeZeroDetail() {
		for(int i = returnOrderDetails.size() - 1;i >= 0;i--){
			ReturnOrderDetail detail = returnOrderDetails.get(i);
			if(detail.getReturnOrderDetailQty().compareTo(BigDecimal.ZERO) == 0
					&& detail.getReturnOrderDetailPresentCount().compareTo(BigDecimal.ZERO) == 0){
				returnOrderDetails.remove(i);
			}
		}
		
	}
	
	public static ReturnOrder get(List<ReturnOrder> returnOrders, String returnOrderFid){
		for(int i = 0;i < returnOrders.size();i++){
			ReturnOrder returnOrder = returnOrders.get(i);
			if(returnOrder.getReturnOrderFid().equals(returnOrderFid)){
				return returnOrder;
			}
		}
		return null;
	}
	
	public void recal() {
		returnOrderTotalMoney = BigDecimal.ZERO;
		for (int i = returnOrderDetails.size() - 1; i >= 0; i--) {
			ReturnOrderDetail detail = returnOrderDetails.get(i);
			if(detail.getReturnOrderDetailUseQty().compareTo(BigDecimal.ZERO) != 0){
				
				detail.setReturnOrderDetailSubtotal(detail.getReturnOrderDetailUseQty().multiply(detail.getReturnOrderDetailUsePrice()).setScale(2, BigDecimal.ROUND_HALF_UP));
				detail.setReturnOrderDetailQty(detail.getReturnOrderDetailUseQty().multiply(detail.getReturnOrderDetailUseRate()));
			} 
			if(detail.getReturnOrderDetailQty().compareTo(BigDecimal.ZERO) > 0){
				detail.setReturnOrderDetailPrice(detail.getReturnOrderDetailSubtotal().divide(detail.getReturnOrderDetailQty(), 4, BigDecimal.ROUND_HALF_UP));
			}
			returnOrderTotalMoney = returnOrderTotalMoney.add(detail.getReturnOrderDetailSubtotal());
		}
		returnOrderTotalMoney = returnOrderTotalMoney.setScale(2, BigDecimal.ROUND_HALF_UP);
		returnOrderDueMoney = returnOrderTotalMoney.negate();
	}

}
