package com.nhsoft.report.model;


import com.nhsoft.report.shared.State;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * AllocationOrder generated by hbm2java
 */
public class AllocationOrder implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4759475991885144702L;
	private String allocationOrderFid;
	private Integer inStorehouseNum;
	private Integer outStorehouseNum;
	private String systemBookCode;
	private Date allocationOrderDate;
	private String allocationOrderOperator;
	private String allocationOrderInMemo;
	private String allocationOrderOutMemo;
	private State state;
	private String allocationOrderCreator;
	private String allocationOrderAuditor;
	private boolean allocationOrderTransferFlag;
	private BigDecimal allocationOrderMoney;
	private Date allocationOrderCreateTime;
	private Date allocationOrderAuditTime;
	private Boolean allocationOrderAntiFlag;
	private List<AllocationOrderDetail> allocationOrderDetails = new ArrayList<AllocationOrderDetail>(0);
	
	private AppUser appUser;
	private String copyFid;
	//不存表
	private Integer branchNum;

	public AllocationOrder() {
	}

	public String getCopyFid() {
		return copyFid;
	}

	public void setCopyFid(String copyFid) {
		this.copyFid = copyFid;
	}

	public AppUser getAppUser() {
		return appUser;
	}

	public void setAppUser(AppUser appUser) {
		this.appUser = appUser;
	}

	public Boolean getAllocationOrderAntiFlag() {
		return allocationOrderAntiFlag;
	}

	public void setAllocationOrderAntiFlag(Boolean allocationOrderAntiFlag) {
		this.allocationOrderAntiFlag = allocationOrderAntiFlag;
	}

	public String getAllocationOrderFid() {
		return this.allocationOrderFid;
	}

	public void setAllocationOrderFid(String allocationOrderFid) {
		this.allocationOrderFid = allocationOrderFid;
	}

	public Integer getInStorehouseNum() {
		return inStorehouseNum;
	}

	public void setInStorehouseNum(Integer inStorehouseNum) {
		this.inStorehouseNum = inStorehouseNum;
	}

	public Integer getOutStorehouseNum() {
		return outStorehouseNum;
	}

	public void setOutStorehouseNum(Integer outStorehouseNum) {
		this.outStorehouseNum = outStorehouseNum;
	}

	public String getSystemBookCode() {
		return systemBookCode;
	}

	public void setSystemBookCode(String systemBookCode) {
		this.systemBookCode = systemBookCode;
	}

	public Date getAllocationOrderDate() {
		return this.allocationOrderDate;
	}

	public void setAllocationOrderDate(Date allocationOrderDate) {
		this.allocationOrderDate = allocationOrderDate;
	}

	public String getAllocationOrderOperator() {
		return this.allocationOrderOperator;
	}

	public void setAllocationOrderOperator(String allocationOrderOperator) {
		this.allocationOrderOperator = allocationOrderOperator;
	}

	public String getAllocationOrderInMemo() {
		return this.allocationOrderInMemo;
	}

	public void setAllocationOrderInMemo(String allocationOrderInMemo) {
		this.allocationOrderInMemo = allocationOrderInMemo;
	}

	public String getAllocationOrderOutMemo() {
		return this.allocationOrderOutMemo;
	}

	public void setAllocationOrderOutMemo(String allocationOrderOutMemo) {
		this.allocationOrderOutMemo = allocationOrderOutMemo;
	}

	public State getState() {
		return state;
	}

	public void setState(State state) {
		this.state = state;
	}

	public String getAllocationOrderCreator() {
		return this.allocationOrderCreator;
	}

	public void setAllocationOrderCreator(String allocationOrderCreator) {
		this.allocationOrderCreator = allocationOrderCreator;
	}

	public String getAllocationOrderAuditor() {
		return this.allocationOrderAuditor;
	}

	public void setAllocationOrderAuditor(String allocationOrderAuditor) {
		this.allocationOrderAuditor = allocationOrderAuditor;
	}

	public boolean isAllocationOrderTransferFlag() {
		return this.allocationOrderTransferFlag;
	}

	public void setAllocationOrderTransferFlag(
			boolean allocationOrderTransferFlag) {
		this.allocationOrderTransferFlag = allocationOrderTransferFlag;
	}

	public BigDecimal getAllocationOrderMoney() {
		return this.allocationOrderMoney;
	}

	public void setAllocationOrderMoney(BigDecimal allocationOrderMoney) {
		this.allocationOrderMoney = allocationOrderMoney;
	}

	public Date getAllocationOrderCreateTime() {
		return this.allocationOrderCreateTime;
	}

	public void setAllocationOrderCreateTime(Date allocationOrderCreateTime) {
		this.allocationOrderCreateTime = allocationOrderCreateTime;
	}

	public Date getAllocationOrderAuditTime() {
		return this.allocationOrderAuditTime;
	}

	public void setAllocationOrderAuditTime(Date allocationOrderAuditTime) {
		this.allocationOrderAuditTime = allocationOrderAuditTime;
	}

	public List<AllocationOrderDetail> getAllocationOrderDetails() {
		return allocationOrderDetails;
	}

	public void setAllocationOrderDetails(
			List<AllocationOrderDetail> allocationOrderDetails) {
		this.allocationOrderDetails = allocationOrderDetails;
	}

	public Integer getBranchNum() {
		return branchNum;
	}

	public void setBranchNum(Integer branchNum) {
		this.branchNum = branchNum;
	}

	public void removeZeroDetail(){
		for(int i = allocationOrderDetails.size() - 1;i >= 0;i--){
			AllocationOrderDetail detail = allocationOrderDetails.get(i);
			if(detail.getAllocationOrderDetailQty().compareTo(BigDecimal.ZERO) == 0){
				allocationOrderDetails.remove(i);
			}
		}
	}
	
	public void recal(){
		allocationOrderMoney = BigDecimal.ZERO;
		for(int i = allocationOrderDetails.size() - 1;i >= 0;i--){
			AllocationOrderDetail detail = allocationOrderDetails.get(i);
			allocationOrderMoney = allocationOrderMoney.add(detail.getAllocationOrderDetailSubtotal());
		}
		allocationOrderMoney = allocationOrderMoney.setScale(2, BigDecimal.ROUND_HALF_UP);
	}

	public static AllocationOrder get(List<AllocationOrder> allocationOrders, String allocationOrderFid){
	    for(int i = 0;i<allocationOrders.size();i++){
	        AllocationOrder allocationOrder = allocationOrders.get(i);
	        if(allocationOrder.getAllocationOrderFid().equals(allocationOrderFid)){
	            return allocationOrder;
	        }
	    }
	    return null;
	}

	public AllocationOrderDetail getAllocationOrderDetail(Integer itemNum, int itemMatrixNum) {
		for(int i = 0; i < allocationOrderDetails.size();i++){
			AllocationOrderDetail detail = allocationOrderDetails.get(i);
			if(detail.getItemNum().equals(itemNum)){
				return detail;
			}
		}
		return null;
	}
}
