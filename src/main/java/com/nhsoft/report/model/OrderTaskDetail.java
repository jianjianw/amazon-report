package com.nhsoft.report.model;



import org.apache.commons.lang3.StringUtils;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * OrderTaskDetail generated by hbm2java
 */
public class OrderTaskDetail implements java.io.Serializable {
	
	private static final long serialVersionUID = 4786908080880771858L;
	private String orderTaskDetailFid;
	private String orderTaskFid;
	private Integer orderTaskDetailSupplierNum;
	private String orderTaskDetailSupplierName;
	private String orderTaskDetailSpec;
	private String orderTaskDetailUseUnit;
	private BigDecimal orderTaskDetailPurchaseQty;
	private BigDecimal orderTaskDetailUsePrice; //公斤单价
	private BigDecimal orderTaskDetailMoney;
	private String orderTaskDetailPresentUnit;
	private BigDecimal orderTaskDetailPresentQty;
	private Date orderTaskDetailPrductingDate;
	private String orderTaskDetailLotNumber;
	private BigDecimal orderTaskDetailUseRate;
	private Date orderTaskDetailPurchaseTime;
	private BigDecimal orderTaskDetailReceiveQty;
	private Date orderTaskDetailReceiveTime;
	private BigDecimal orderTaskDetailTareMoney;
	private BigDecimal orderTaskDetailPayMoney;
	private Integer orderTaskDetailStatus;
	private String orderTaskDetailMemo;
	private String orderTaskDetailRef; //存taskRequestFid
	private BigDecimal orderTaskDetailPurchaseUseQty;
	private BigDecimal orderTaskDetailPresentUseQty;
	private BigDecimal orderTaskDetailSupplierPrice;
	private BigDecimal orderTaskDetailPackPrice;//件单价
	private BigDecimal orderTaskDetailCostPrice;//入库单价(件价)
	private BigDecimal orderTaskDetailTare;//皮重
	private BigDecimal orderTaskDetailReceiveBasic; //收货基本数量
	private Integer orderTaskDetailTransitTime;
	private Date orderTaskDetailSendTime;
	private BigDecimal orderTaskDetailSalePrice; //建议零售价
	private BigDecimal orderTaskDetailActualTare;//实际皮重
	private Boolean orderTaskDetailDirectTranasfer;//是否直配(无需收货员收货)
	private BigDecimal orderTaskDetailActualPrice; //公斤实际单价
	private Boolean orderTaskDetailDirectReceive;//是否采购完成直接收货
	private Boolean orderTaskDetailSendFlag;
	private BigDecimal orderTaskDetailPurchaseViewQty;
	private String orderTaskDetailTransitNo;//运输号（车牌号）

	//临时属性
	//查询用
	private OrderTask orderTask;
	private BigDecimal orderTaskDetailReceiveRemainQty;//剩余数量
	private InventoryLnProperty inventoryLnProperty;
	private Integer itemNum;
	private String orderTaskItemName;
	//序号
	private String sequence = "";
	private ReceiveOrderDetail receiveOrderDetail; 
	private Inventory inventory; //临时属性
	private List<OrderTaskDetailBranch> orderTaskDetailBranchs = new ArrayList<OrderTaskDetailBranch>();

	public OrderTaskDetail() {
	}

	public String getOrderTaskDetailTransitNo() {
		return orderTaskDetailTransitNo;
	}

	public void setOrderTaskDetailTransitNo(String orderTaskDetailTransitNo) {
		this.orderTaskDetailTransitNo = orderTaskDetailTransitNo;
	}

	public BigDecimal getOrderTaskDetailPurchaseViewQty() {
		return orderTaskDetailPurchaseViewQty;
	}

	public void setOrderTaskDetailPurchaseViewQty(BigDecimal orderTaskDetailPurchaseViewQty) {
		this.orderTaskDetailPurchaseViewQty = orderTaskDetailPurchaseViewQty;
	}

	public Boolean getOrderTaskDetailSendFlag() {
		return orderTaskDetailSendFlag;
	}

	public void setOrderTaskDetailSendFlag(Boolean orderTaskDetailSendFlag) {
		this.orderTaskDetailSendFlag = orderTaskDetailSendFlag;
	}

	public Boolean getOrderTaskDetailDirectReceive() {
		return orderTaskDetailDirectReceive;
	}

	public void setOrderTaskDetailDirectReceive(Boolean orderTaskDetailDirectReceive) {
		this.orderTaskDetailDirectReceive = orderTaskDetailDirectReceive;
	}

	public BigDecimal getOrderTaskDetailActualPrice() {
		return orderTaskDetailActualPrice;
	}

	public void setOrderTaskDetailActualPrice(BigDecimal orderTaskDetailActualPrice) {
		this.orderTaskDetailActualPrice = orderTaskDetailActualPrice;
	}

	public List<OrderTaskDetailBranch> getOrderTaskDetailBranchs() {
		return orderTaskDetailBranchs;
	}

	public void setOrderTaskDetailBranchs(List<OrderTaskDetailBranch> orderTaskDetailBranchs) {
		this.orderTaskDetailBranchs = orderTaskDetailBranchs;
	}

	public Boolean getOrderTaskDetailDirectTranasfer() {
		return orderTaskDetailDirectTranasfer;
	}

	public void setOrderTaskDetailDirectTranasfer(Boolean orderTaskDetailDirectTranasfer) {
		this.orderTaskDetailDirectTranasfer = orderTaskDetailDirectTranasfer;
	}

	public BigDecimal getOrderTaskDetailSalePrice() {
		return orderTaskDetailSalePrice;
	}

	public void setOrderTaskDetailSalePrice(BigDecimal orderTaskDetailSalePrice) {
		this.orderTaskDetailSalePrice = orderTaskDetailSalePrice;
	}

	public BigDecimal getOrderTaskDetailActualTare() {
		return orderTaskDetailActualTare;
	}

	public void setOrderTaskDetailActualTare(BigDecimal orderTaskDetailActualTare) {
		this.orderTaskDetailActualTare = orderTaskDetailActualTare;
	}

	public Integer getOrderTaskDetailTransitTime() {
		return orderTaskDetailTransitTime;
	}

	public void setOrderTaskDetailTransitTime(Integer orderTaskDetailTransitTime) {
		this.orderTaskDetailTransitTime = orderTaskDetailTransitTime;
	}

	public Date getOrderTaskDetailSendTime() {
		return orderTaskDetailSendTime;
	}

	public void setOrderTaskDetailSendTime(Date orderTaskDetailSendTime) {
		this.orderTaskDetailSendTime = orderTaskDetailSendTime;
	}

	public Inventory getInventory() {
		return inventory;
	}

	public void setInventory(Inventory inventory) {
		this.inventory = inventory;
	}

	public ReceiveOrderDetail getReceiveOrderDetail() {
		return receiveOrderDetail;
	}

	public void setReceiveOrderDetail(ReceiveOrderDetail receiveOrderDetail) {
		this.receiveOrderDetail = receiveOrderDetail;
	}

	public InventoryLnProperty getInventoryLnProperty() {
		return inventoryLnProperty;
	}

	public void setInventoryLnProperty(InventoryLnProperty inventoryLnProperty) {
		this.inventoryLnProperty = inventoryLnProperty;
	}

	public BigDecimal getOrderTaskDetailReceiveBasic() {
		return orderTaskDetailReceiveBasic;
	}

	public void setOrderTaskDetailReceiveBasic(BigDecimal orderTaskDetailReceiveBasic) {
		this.orderTaskDetailReceiveBasic = orderTaskDetailReceiveBasic;
	}

	public BigDecimal getOrderTaskDetailCostPrice() {
		return orderTaskDetailCostPrice;
	}

	public void setOrderTaskDetailCostPrice(BigDecimal orderTaskDetailCostPrice) {
		this.orderTaskDetailCostPrice = orderTaskDetailCostPrice;
	}

	public BigDecimal getOrderTaskDetailSupplierPrice() {
		return orderTaskDetailSupplierPrice;
	}

	public void setOrderTaskDetailSupplierPrice(BigDecimal orderTaskDetailSupplierPrice) {
		this.orderTaskDetailSupplierPrice = orderTaskDetailSupplierPrice;
	}

	public String getSequence() {
		return sequence;
	}

	public void setSequence(String sequence) {
		this.sequence = sequence;
	}

	public String getOrderTaskDetailFid() {
		return orderTaskDetailFid;
	}

	public void setOrderTaskDetailFid(String orderTaskDetailFid) {
		this.orderTaskDetailFid = orderTaskDetailFid;
	}

	public String getOrderTaskFid() {
		return orderTaskFid;
	}

	public void setOrderTaskFid(String orderTaskFid) {
		this.orderTaskFid = orderTaskFid;
	}

	public OrderTask getOrderTask() {
		return this.orderTask;
	}

	public void setOrderTask(OrderTask orderTask) {
		this.orderTask = orderTask;
	}

	public Integer getOrderTaskDetailSupplierNum() {
		return this.orderTaskDetailSupplierNum;
	}

	public void setOrderTaskDetailSupplierNum(Integer orderTaskDetailSupplierNum) {
		this.orderTaskDetailSupplierNum = orderTaskDetailSupplierNum;
	}

	public String getOrderTaskDetailSupplierName() {
		return this.orderTaskDetailSupplierName;
	}

	public void setOrderTaskDetailSupplierName(String orderTaskDetailSupplierName) {
		this.orderTaskDetailSupplierName = orderTaskDetailSupplierName;
	}

	public String getOrderTaskDetailSpec() {
		return this.orderTaskDetailSpec;
	}

	public void setOrderTaskDetailSpec(String orderTaskDetailSpec) {
		this.orderTaskDetailSpec = orderTaskDetailSpec;
	}

	public String getOrderTaskDetailUseUnit() {
		return this.orderTaskDetailUseUnit;
	}

	public void setOrderTaskDetailUseUnit(String orderTaskDetailUseUnit) {
		this.orderTaskDetailUseUnit = orderTaskDetailUseUnit;
	}

	public BigDecimal getOrderTaskDetailPurchaseQty() {
		return this.orderTaskDetailPurchaseQty;
	}

	public void setOrderTaskDetailPurchaseQty(BigDecimal orderTaskDetailPurchaseQty) {
		if(orderTaskDetailPurchaseQty != null){
			orderTaskDetailPurchaseQty = orderTaskDetailPurchaseQty.setScale(2, BigDecimal.ROUND_HALF_UP);
		}
		this.orderTaskDetailPurchaseQty = orderTaskDetailPurchaseQty;
	}

	public BigDecimal getOrderTaskDetailUsePrice() {
		return this.orderTaskDetailUsePrice;
	}

	public void setOrderTaskDetailUsePrice(BigDecimal orderTaskDetailUsePrice) {
		this.orderTaskDetailUsePrice = orderTaskDetailUsePrice;
	}

	public BigDecimal getOrderTaskDetailMoney() {
		if(orderTaskDetailMoney == null){
			return BigDecimal.ZERO;
		}
		return this.orderTaskDetailMoney;
	}

	public void setOrderTaskDetailMoney(BigDecimal orderTaskDetailMoney) {
		this.orderTaskDetailMoney = orderTaskDetailMoney;
	}

	public String getOrderTaskDetailPresentUnit() {
		return this.orderTaskDetailPresentUnit;
	}

	public void setOrderTaskDetailPresentUnit(String orderTaskDetailPresentUnit) {
		this.orderTaskDetailPresentUnit = orderTaskDetailPresentUnit;
	}

	public BigDecimal getOrderTaskDetailPresentQty() {
		return this.orderTaskDetailPresentQty;
	}

	public void setOrderTaskDetailPresentQty(BigDecimal orderTaskDetailPresentQty) {
		this.orderTaskDetailPresentQty = orderTaskDetailPresentQty;
	}

	public Date getOrderTaskDetailPrductingDate() {
		return this.orderTaskDetailPrductingDate;
	}

	public void setOrderTaskDetailPrductingDate(Date orderTaskDetailPrductingDate) {
		this.orderTaskDetailPrductingDate = orderTaskDetailPrductingDate;
	}

	public BigDecimal getOrderTaskDetailUseRate() {
		return this.orderTaskDetailUseRate;
	}

	public void setOrderTaskDetailUseRate(BigDecimal orderTaskDetailUseRate) {
		this.orderTaskDetailUseRate = orderTaskDetailUseRate;
	}

	public Date getOrderTaskDetailPurchaseTime() {
		return this.orderTaskDetailPurchaseTime;
	}

	public void setOrderTaskDetailPurchaseTime(Date orderTaskDetailPurchaseTime) {
		this.orderTaskDetailPurchaseTime = orderTaskDetailPurchaseTime;
	}

	public BigDecimal getOrderTaskDetailReceiveQty() {
		return this.orderTaskDetailReceiveQty;
	}

	public void setOrderTaskDetailReceiveQty(BigDecimal orderTaskDetailReceiveQty) {
		this.orderTaskDetailReceiveQty = orderTaskDetailReceiveQty;
	}

	public Date getOrderTaskDetailReceiveTime() {
		return this.orderTaskDetailReceiveTime;
	}

	public void setOrderTaskDetailReceiveTime(Date orderTaskDetailReceiveTime) {
		this.orderTaskDetailReceiveTime = orderTaskDetailReceiveTime;
	}

	public BigDecimal getOrderTaskDetailTareMoney() {
		return this.orderTaskDetailTareMoney;
	}

	public void setOrderTaskDetailTareMoney(BigDecimal orderTaskDetailTareMoney) {
		this.orderTaskDetailTareMoney = orderTaskDetailTareMoney;
	}

	public BigDecimal getOrderTaskDetailPayMoney() {
		return this.orderTaskDetailPayMoney;
	}

	public void setOrderTaskDetailPayMoney(BigDecimal orderTaskDetailPayMoney) {
		this.orderTaskDetailPayMoney = orderTaskDetailPayMoney;
	}

	public Integer getOrderTaskDetailStatus() {
		return this.orderTaskDetailStatus;
	}

	public void setOrderTaskDetailStatus(Integer orderTaskDetailStatus) {
		this.orderTaskDetailStatus = orderTaskDetailStatus;
	}

	public String getOrderTaskDetailMemo() {
		return this.orderTaskDetailMemo;
	}

	public void setOrderTaskDetailMemo(String orderTaskDetailMemo) {
		this.orderTaskDetailMemo = orderTaskDetailMemo;
	}

	public String getOrderTaskDetailLotNumber() {
		return orderTaskDetailLotNumber;
	}

	public void setOrderTaskDetailLotNumber(String orderTaskDetailLotNumber) {
		this.orderTaskDetailLotNumber = orderTaskDetailLotNumber;
	}

	public String getOrderTaskDetailRef() {
		return orderTaskDetailRef;
	}

	public void setOrderTaskDetailRef(String orderTaskDetailRef) {
		this.orderTaskDetailRef = orderTaskDetailRef;
	}

	public BigDecimal getOrderTaskDetailReceiveRemainQty() {
		return orderTaskDetailReceiveRemainQty;
	}

	public void setOrderTaskDetailReceiveRemainQty(BigDecimal orderTaskDetailReceiveRemainQty) {
		this.orderTaskDetailReceiveRemainQty = orderTaskDetailReceiveRemainQty;
	}

	public BigDecimal getOrderTaskDetailPurchaseUseQty() {
		return orderTaskDetailPurchaseUseQty;
	}

	public void setOrderTaskDetailPurchaseUseQty(BigDecimal orderTaskDetailPurchaseUseQty) {
		this.orderTaskDetailPurchaseUseQty = orderTaskDetailPurchaseUseQty;
	}

	public BigDecimal getOrderTaskDetailPresentUseQty() {
		return orderTaskDetailPresentUseQty;
	}

	public void setOrderTaskDetailPresentUseQty(BigDecimal orderTaskDetailPresentUseQty) {
		this.orderTaskDetailPresentUseQty = orderTaskDetailPresentUseQty;
	}

	public BigDecimal getOrderTaskDetailPackPrice() {
		return orderTaskDetailPackPrice;
	}

	public void setOrderTaskDetailPackPrice(BigDecimal orderTaskDetailPackPrice) {
		this.orderTaskDetailPackPrice = orderTaskDetailPackPrice;
	}

	public Integer getItemNum() {
		return itemNum;
	}

	public String getOrderTaskItemName() {
		return orderTaskItemName;
	}

	public void setItemNum(Integer itemNum) {
		this.itemNum = itemNum;
	}

	public void setOrderTaskItemName(String orderTaskItemName) {
		this.orderTaskItemName = orderTaskItemName;
	}

	public BigDecimal getOrderTaskDetailTare() {
		return orderTaskDetailTare;
	}

	public void setOrderTaskDetailTare(BigDecimal orderTaskDetailTare) {
		this.orderTaskDetailTare = orderTaskDetailTare;
	}

	public static List<OrderTaskDetail> findOrderTaskDetails(List<OrderTaskDetail> orderTaskDetails,
			String orderTaskFid) {
		List<OrderTaskDetail> list = new ArrayList<OrderTaskDetail>();
		for(int i = 0;i < orderTaskDetails.size();i++){
			OrderTaskDetail orderTaskDetail = orderTaskDetails.get(i);
			if(orderTaskDetail.getOrderTaskFid().equals(orderTaskFid)){
				list.add(orderTaskDetail);
			}
		}
		return list;
	}
	
	public static List<OrderTaskDetail> findOrderTaskDetailsByRef(List<OrderTaskDetail> orderTaskDetails,
			String orderTaskDetailRef) {
		List<OrderTaskDetail> list = new ArrayList<OrderTaskDetail>();
		for(int i = 0;i < orderTaskDetails.size();i++){
			OrderTaskDetail orderTaskDetail = orderTaskDetails.get(i);
			if(orderTaskDetail.getOrderTaskDetailRef().equals(orderTaskDetailRef)){
				list.add(orderTaskDetail);
			}
		}
		return list;
	}
	
	public static OrderTaskDetail get(List<OrderTaskDetail> orderTaskDetails,
			String orderTaskDetailFid) {
		for(int i = 0;i < orderTaskDetails.size();i++){
			OrderTaskDetail orderTaskDetail = orderTaskDetails.get(i);
			if(orderTaskDetail.getOrderTaskDetailFid().equals(orderTaskDetailFid)){
				return orderTaskDetail;
			}
		}
		return null;
	}
	
	public static OrderTaskDetail getByLot(List<OrderTaskDetail> orderTaskDetails,
			String lot) {
		if(lot == null){
			lot = "";
		}
		for(int i = 0;i < orderTaskDetails.size();i++){
			OrderTaskDetail orderTaskDetail = orderTaskDetails.get(i);
			if(orderTaskDetail.getOrderTaskDetailLotNumber() == null){
				orderTaskDetail.setOrderTaskDetailLotNumber("");
			} 
			if(StringUtils.equals(orderTaskDetail.getOrderTaskDetailLotNumber(), lot)){
				return orderTaskDetail;
			}
		}
		return null;
	}
	
	/**
	 * 根据批次号查询采购任务明细
	 * @param orderTaskDetails
	 * @param lot
	 * @return
	 */
	public static OrderTaskDetail getPurchaseTaskDetailByLot(List<OrderTaskDetail> orderTaskDetails,
			String lot) {
		if(lot == null){
			lot = "";
		}
		for(int i = 0;i < orderTaskDetails.size();i++){
			OrderTaskDetail orderTaskDetail = orderTaskDetails.get(i);
			if(orderTaskDetail.getOrderTaskDetailSupplierNum() == null){
				continue;
			}
			if(orderTaskDetail.getOrderTaskDetailLotNumber() == null){
				orderTaskDetail.setOrderTaskDetailLotNumber("");
			} 
			if(StringUtils.equals(orderTaskDetail.getOrderTaskDetailLotNumber(), lot)){
				return orderTaskDetail;
			}
		}
		return null;
	}
	
	/**
	 * 根据批次号查询出仓任务明细
	 * @param orderTaskDetails
	 * @param lot
	 * @return
	 */
	public static OrderTaskDetail getInventoryTaskDetailByLot(List<OrderTaskDetail> orderTaskDetails,
			String lot) {
		if(lot == null){
			lot = "";
		}
		for(int i = 0;i < orderTaskDetails.size();i++){
			OrderTaskDetail orderTaskDetail = orderTaskDetails.get(i);
			if(orderTaskDetail.getOrderTaskDetailSupplierNum() != null){
				continue;
			}
			if(orderTaskDetail.getOrderTaskDetailLotNumber() == null){
				orderTaskDetail.setOrderTaskDetailLotNumber("");
			} 
			if(StringUtils.equals(orderTaskDetail.getOrderTaskDetailLotNumber(), lot)){
				return orderTaskDetail;
			}
		}
		return null;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((orderTaskDetailFid == null) ? 0 : orderTaskDetailFid.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		OrderTaskDetail other = (OrderTaskDetail) obj;
		if (orderTaskDetailFid == null) {
			if (other.orderTaskDetailFid != null)
				return false;
		} else if (!orderTaskDetailFid.equals(other.orderTaskDetailFid))
			return false;
		return true;
	}
	
	
}
